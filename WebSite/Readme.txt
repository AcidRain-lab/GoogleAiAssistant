ASP NET Core MVC and API Web service

Шари:
DAL (Data Access Layer): Моделі бази даних та контекст BankContext, налаштований для роботи з MS SQL.

WebAuthCoreBLL та WebLoginBLL: Забезпечують аутентифікацію та бізнес-логіку, включаючи мапінг (AutoMapper), управління JWT, куками та паролями.
WebObjectsBLL: Логіка для роботи з об'єктами, такими як транзакції, включаючи DTO та сервіси.

WebSite: Шар представлення, що включає контролери (MVC та API) та представлення (Views).
Контролери:
Розподіл на категорії:
API: Для роботи з JSON через HTTP (наприклад, TransactionsApiController).
MVC: Для роботи з представленнями (наприклад, TransactionsController).
Представлення (Views):
Містять секції для всіх ключових компонентів (Auth, Home, Role, Transactions, User).

Використовуються часткові представлення (_ValidationScriptsPartial.cshtml та інші).
2. Переваги реалізації
Підтримка як API, так і MVC:
API-контролери використовують атрибут Authorize для JWT-аутентифікації.
MVC-контролери використовують куки для авторизації користувачів.

Універсальність налаштування аутентифікації:
У файлах appsettings.json та AuthHelper можна обрати, який метод аутентифікації вмикати (JWT або куки).
Використання AutoMapper:
Шар бізнес-логіки ефективно використовує мапінг між моделями бази даних та DTO.
Строга типізація:
Усі класи DTO та методи містять перевірки валідності даних та підтримують асинхронність.
CORS:
Налаштовані політики CORS для API (підтримка фронтенду, наприклад, React).

Модульність:
Чіткий розподіл логіки по шарах робить проєкт зручним для тестування та розширення.
